#! /bin/bash


pgmname=`basename $0`


function emsg {

  # Print the message $1 to std-err.

  echo 1>&2 "$1"
  }


function comment {

  # Print the comment $2 at level $1.

  emsg "$2"
  }


function do_file {

  # Link the file ./$2 to the directory $1.

  if [ -f $1/$2 ] ; then
    if `cmp -s $2 $1/$2` ; then
      comment 1 "File $2 already exists in directory $1, $2 not linked."
    else
      comment 0 "$1/$2 exists and differs from $2, $2 not linked."
    fi
  else
    ln $2 $1
    chmod a-w $1/$2
    chmod a+r $1/$2
    [ -x $1/$2 ] && chmod a+x $1/$2
    [ "$(whoami)" = "root" ] && chown root:root $1/$2
  fi
  }


function do_dir {

  # Link the directory ./$2 to the directory $1.

  if [ -d $1/$2 ] ; then
    cd $2
    do_files $1/$2
    cd ..
  elif [ -f $1/$2 ] ; then
    comment 0 "$1/$2 exists and is not a directory; $2 not linked."
  else
    mkdir $1/$2
    do_dir $1 $2
  fi
  }


function do_files {

  # Add links from all the files in the current directory to the target
  # directory $1.  

  for f in * ; do
    if [ "$f" = '*' ] ; then
      :
    elif [ -f $f ] ; then
      do_file $1 $f
    elif [ -d $f ] ; then
      do_dir $1 $f
    else
      comment 0 "$f isn't a file or directory"
    fi
  done
  }


function do_pkg {

  # Make links from files under the package $1 into the target directory $2.

  cd $1

  for f in * ; do
    if [ -f $f ] ; then
      comment 0 "non-directory file $f under package $1"
    elif [ -d $f ] ; then
      do_dir $2 $f
    else
      comment 0 "$f isn't a file or directory"
    fi
  done

  cd ..
  }


function oops {

  # Print $1 to std-err and die.

  emsg "$1."
  exit 1
  }


function badcmd {

  # Print a bad command message and die.

  oops "Command format is \"$pgmname [-t target-dir] pkg-name\""
  }


[ $# -lt 1 ] && badcmd

if [ $(whoami) == "root" ] ; then
  tgt_dir=/usr/local
else
  tgt_dir=$HOME/local
fi

pkg=''

while [ $# -gt 0 ]
do case $1 in
        -t*)	tgt_dir=`expr $1 : '-[Pp]\(.*\)'`
		if [ ! "$tgt_dir" ] ; then
		  shift 1
		  tgt_dir=$1
		fi
		[ "$tgt_dir" ] || oops '-t needs an argument'
		;;

	-*)	emsg "$1 is an unrecognized option."
	        badcmd
		;;

	*)	if [ "$pkg" ] ; then
		  emsg "Only one package may be given."
		  badcmd
		fi
	        pkg=$1
		;;

	esac

   shift 1

   done

[ ! "$pkg" ] && badcmd

[ -d "$pkg" ] || oops "Can't find the source directory $pkg"
[ -d "$tgt_dir" ] || oops "Can't find the target directory $tgt_dir"

do_pkg $pkg $tgt_dir


# $Log: add-links,v $
# Revision 1.2  2006-12-16 16:41:10  rclayton
# Don't change owner to root if root didn't give the command.
#
# Revision 1.3  2005-12-15 02:05:04  rclayton
# Change the link owner and group to root.
#
# Revision 1.2  2004/11/28 22:14:05  rclayton
# Use /bin/bash, not /usr/bin/bash; set the target directory based on the
# root status of the user.
#
